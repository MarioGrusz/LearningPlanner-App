{"version":3,"sources":["script.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","welcomePage","document","querySelector","itemsListPage","nextPageButton","displayCurrentDate","form","getElementById","categoryInput","categoriesConteiner","categories","JSON","parse","localStorage","getItem","selectedCategoryId","categoriesCounter","leaveWelcomePage","e","style","transform","addEventListener","display","getCurrentDate","date","Date","clientTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","currentDate","dateStyle","concat","format","innerHTML","updateCategoryCounter","innerText","categoryString","displayCategory","forEach","category","categoryWrapper","createElement","classList","add","categoryItem","id","appendChild","categoryItemTask","categoryName","editDeleteBtnContainer","editBtn","deleteBtn","openButton","currentTarget","parentElement","window","filter","item","saveToLocalStorage","removeAttribute","value","setSelectionRange","focus","setAttribute","tasksCounter","progressBar","progressBarValue","progressBarFill","taskElementsContainer","tasksWrapper","showProgressBar","tasks","contains","UNIT","openElement","remove","position","pos","top","rect","getBoundingClientRect","left","width","height","element","_ref","setElementSize","_ref2","setElementPosition","updateTasksRatio","thisCategoryId","selectedCategory","find","completeTaskCount","task","complete","taskRatioNumber","Math","floor","taskRatio","pop","push","taskForms","querySelectorAll","_loop","preventDefault","taskItemName","getTime","toString","remainingTime","reset","displayTask","taskElement","taskFirst","checkboxElement","type","checked","taskName","showTasksCount","countDown","ProgressBar","initialValue","arguments","this","valueElement","fillElement","setValue","newValue","isNaN","update","percentage","textContent","incompleteTaskCount","taskString","Timer","root","_this","getHTML","el","minutes","seconds","control","timeForm","timeValue","notificationBox","closeBoxButton","interval","remainingSeconds","start","stop","updateInterfaceTime","updateInterfaceControls","updateRemainingTime","zIndex","inputeMinutes","thisTaskId","previousSibling","selectedTask","setItem","stringify","console","log","padStart","_this2","setInterval","clearInterval","trim"],"mappings":"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","file":"script.js","sourcesContent":["// ****** SELECT ITEMS **********\r\n\r\nconst welcomePage = document.querySelector('.welcome-page__container');\r\nconst itemsListPage = document.querySelector('.items-container');\r\nconst nextPageButton = document.querySelector('.welcome-page__btn');\r\n\r\nconst displayCurrentDate = document.querySelector('.text-wrapper');\r\n\r\nconst form = document.getElementById('new-category-form');\r\nconst categoryInput = document.getElementById('category-name');\r\nconst categoriesConteiner = document.querySelector('.category-box-container');\r\n\r\nlet categories = JSON.parse(localStorage.getItem('categories')) || [];\r\nlet selectedCategoryId = localStorage.getItem('category.selectedCategoryId');\r\n\r\nconst categoriesCounter = document.querySelector('.category-counter');\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ****** FUNCTIONS **********\r\n\r\n// PAGE TRANSITION\r\nconst leaveWelcomePage = (e) => {\r\n    \r\n    welcomePage.style.transform = \"translateX(-100%)\";\r\n    welcomePage.addEventListener(\"transitionend\", (e) => {\r\n        welcomePage.style.display = \"none\"\r\n    });\r\n    if(categories.length == 0 || categories.length !== 0) {\r\n      itemsListPage.style.transform = \"translateX(0)\";\r\n      itemsListPage.style.display = \"flex\";\r\n    }\r\n};\r\n\r\n\r\n\r\n// CURRENT DATE\r\nconst getCurrentDate = () => {\r\n    const date = new Date();\r\n    const clientTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    const currentDate = new Intl.DateTimeFormat('en-GB', { dateStyle: 'full', timeZone: `${clientTimeZone}`}).format(date);\r\n    displayCurrentDate.innerHTML = `Today is, ${currentDate}`;\r\n};\r\n\r\n\r\n//SHOW / UPDATE CATEGORY COUNTER/NUMBER\r\nconst updateCategoryCounter = () => {\r\n \r\n    if (categories.length === 0 ) {\r\n       categoriesCounter.innerText = \"You don't have any categories\";\r\n    } else {\r\n      const categoryString = categories.length === 1 ? \"category\" : \"categories\"\r\n      categoriesCounter.innerText = `You have ${categories.length} ${categoryString}`;\r\n      \r\n    }  \r\n};\r\n\r\n\r\n//RENDER CATEGORY\r\nconst displayCategory = () => {\r\n    categoriesConteiner.innerHTML = '';\r\n\r\n    categories.forEach(category => {\r\n\r\n        const categoryWrapper = document.createElement('div');\r\n        categoryWrapper.classList.add('category-wrapper');\r\n\r\n        const categoryItem = document.createElement('li');\r\n        categoryItem.classList.add('category-box', 'glassmorphism-card');\r\n        categoryItem.id = category.id;\r\n        categoryWrapper.appendChild(categoryItem);   \r\n\r\n        const categoryItemTask = document.createElement('div');\r\n        categoryItemTask.classList.add('category-box__task');\r\n        categoryItemTask.innerHTML = `<input class=\"category-box__name\" type=\"text\" value=\"${category.categoryName}\" readonly>`;\r\n        categoryItem.appendChild(categoryItemTask);\r\n\r\n        const editDeleteBtnContainer = document.createElement('div');\r\n        editDeleteBtnContainer.classList.add('btn-container');\r\n        categoryItem.appendChild(editDeleteBtnContainer);\r\n\r\n        const editBtn = document.createElement('button');\r\n        editBtn.classList.add('edit-btn');\r\n        editBtn.innerHTML = `<i class=\"fas fa-edit\"></i>`;\r\n        editDeleteBtnContainer.appendChild(editBtn);\r\n\r\n        const deleteBtn = document.createElement('button');\r\n        deleteBtn.classList.add('delete-btn');\r\n        deleteBtn.innerHTML = `<i class=\"fas fa-trash\"></i>`;\r\n        editDeleteBtnContainer.appendChild(deleteBtn);\r\n\r\n        const openButton = document.createElement('button');\r\n        openButton.innerHTML = 'OPEN';\r\n        openButton.classList.add('button-open');\r\n        editDeleteBtnContainer.appendChild(openButton);\r\n\r\n        deleteBtn.addEventListener('click', deleteElement); //DELETE BUTTON\r\n        editBtn.addEventListener('click', editElement); // EDIT BUTTON\r\n\r\n        const tasksCounter = document.createElement('p');\r\n        tasksCounter.classList.add('tasks-counter');\r\n        tasksCounter.innerHTML = \"Click Open and add task/s\"\r\n        categoryItem.appendChild(tasksCounter);\r\n\r\n        const progressBar = document.createElement('div');\r\n        progressBar.classList.add('progress-bar');\r\n        categoryItem.appendChild(progressBar);\r\n    \r\n        const progressBarValue = document.createElement('div');\r\n        progressBarValue.classList.add('progress-bar-value');\r\n        progressBar.appendChild(progressBarValue);\r\n    \r\n        const progressBarFill = document.createElement('div');\r\n        progressBarFill.classList.add('progress-bar-fill');\r\n        progressBar.appendChild(progressBarFill);\r\n\r\n        const taskElementsContainer = document.createElement('div');\r\n        taskElementsContainer.classList.add('task-elements-container');\r\n        taskElementsContainer.innerHTML = `\r\n        <form class=\"new-task-form\">\r\n          <input\r\n            class=\"task-input\"\r\n            type=\"text\"\r\n            placeholder=\"Name a new task and enter/click to add...\"\r\n          />\r\n          <input\r\n            class=\"create-task-btn\"\r\n            type=\"submit\"\r\n            value=\"Create task\"\r\n          />\r\n        </form>` \r\n\r\n        const tasksWrapper = document.createElement('div');\r\n        tasksWrapper.classList.add('tasks-wrapper');\r\n        taskElementsContainer.appendChild(tasksWrapper);\r\n    \r\n        categoryItem.appendChild(taskElementsContainer);\r\n\r\n        categoriesConteiner.appendChild(categoryWrapper); //APPEND TO MAIN CONTAINER\r\n        //showProgressBar();\r\n\r\n\r\n        function showProgressBar(){\r\n          if(category.tasks.length !== 0 && categoryItem.classList.contains('fullscreen')){\r\n                progressBar.style.display = 'block'\r\n            } else {\r\n                progressBar.style.display = 'none'\r\n            }\r\n        };\r\n    \r\n\r\n        //DELETE FUNCTION\r\n        function deleteElement(e){\r\n           \r\n            let thisItem = e.currentTarget.parentElement.parentElement.parentElement;\r\n            thisItem.classList.add('fall');\r\n\r\n            window.addEventListener('transitionend', function(){\r\n                categories = categories.filter(item => item !== category);\r\n                selectedCategoryId = null;\r\n                \r\n                saveToLocalStorage();\r\n                displayCategory();\r\n                updateCategoryCounter(); \r\n\r\n            });\r\n        };\r\n  \r\n        //EDIT FUNCTION\r\n        function editElement(e){\r\n  \r\n            const input = categoryItem.querySelector('.category-box__name')\r\n            input.removeAttribute('readonly');\r\n    \r\n            //Cursor at the end of text\r\n            input.addEventListener('focus', e => {\r\n            const { value } = e.target;\r\n            e.target.setSelectionRange(value.length, value.length);\r\n            });\r\n    \r\n            input.focus();\r\n            input.addEventListener('blur', (e) => {\r\n            input.setAttribute('readonly', true);\r\n            category.categoryName = e.target.value;\r\n            saveToLocalStorage();\r\n            displayCategory();\r\n            });   \r\n        };\r\n\r\n        //Small to fullscreen box -- function/animation\r\n\r\n        //Helping functions fullscreen animation (from div to fullscreen animation)\r\n\r\n        const UNIT = 'px';\r\n\r\n        const getElementPosition = element => {\r\n        const rect = element.getBoundingClientRect();\r\n            return {\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height\r\n            };\r\n        };\r\n\r\n        const setElementSize = (element, { width, height }) => {\r\n            element.style.width = `${width}${UNIT}`;\r\n            element.style.height = `${height}${UNIT}`;\r\n        };\r\n\r\n        const setElementPosition = (element, { top, left }) => {\r\n            element.style.top = `${top}${UNIT}`;\r\n            element.style.left = `${left}${UNIT}`;\r\n        };\r\n\r\n        const openElement = () => {\r\n\r\n            if (categoryItem.classList.contains('fullscreen')) {\r\n                categoryItem.classList.remove('fullscreen');\r\n                taskElementsContainer.style.display = 'none'\r\n                categoryItem.style.position = 'static';\r\n                openButton.innerText = 'OPEN';\r\n                progressBar.style.display = 'none';\r\n                saveToLocalStorage();\r\n            } else {\r\n                const pos = getElementPosition(categoryItem);\r\n                setElementSize(categoryItem, pos);\r\n                setElementPosition(categoryItem, pos);\r\n                categoryItem.classList.add('fullscreen');\r\n                taskElementsContainer.style.display = 'flex';\r\n                openButton.innerText = 'CLOSE';\r\n                showProgressBar();\r\n                categoryItem.style.position = 'fixed';\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n        //SAVE FULLSCREEN OPTION ON REFRESH\r\n        if (category.id === selectedCategoryId) { \r\n            //openElment();\r\n        };\r\n\r\n      \r\n        //CATEGORY BOX TO FULLSCREEN \r\n        openButton.addEventListener('click', e => {\r\n\r\n            selectedCategoryId = e.target.parentElement.parentElement.id;\r\n            saveToLocalStorage();                      \r\n            openElement();\r\n        }); \r\n\r\n\r\n        //UPDATE DONE/UNDONE TAKS RATIO\r\n        function updateTasksRatio(thisCategoryId) {\r\n            const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n            const completeTaskCount = selectedCategory.tasks.filter(task => task.complete).length;\r\n            let taskRatioNumber = Math.floor((100 * completeTaskCount) / category.tasks.length);\r\n            category.taskRatio.pop();\r\n            category.taskRatio.push(taskRatioNumber);\r\n            saveToLocalStorage();\r\n        };\r\n\r\n\r\n\r\n        //FUNCTIONS AND EVENT LISTENERS HANDEL INSIDE CATEGORY TASKS\r\n\r\n        const taskForms = document.querySelectorAll('.new-task-form');\r\n\r\n        //SUBMIT TASK \r\n        for(let i = 0; i < taskForms.length; i++){\r\n\r\n            taskForms[i].addEventListener('submit', e => {\r\n              e.preventDefault(); \r\n              const thisCategoryId = e.currentTarget.parentElement.parentElement.id;\r\n      \r\n              let task = {\r\n      \r\n                taskItemName: taskForms[i][0].value,\r\n                id: new Date().getTime().toString(),\r\n                remainingTime: [],\r\n                complete: false,\r\n      \r\n              };\r\n      \r\n              if(taskForms[i][0].value == null || taskForms[i][0].value === '') return;\r\n      \r\n              const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n              selectedCategory.tasks.push(task);\r\n              saveToLocalStorage();\r\n      \r\n              updateCategoryCounter(thisCategoryId);\r\n              updateTasksRatio(thisCategoryId);\r\n              saveToLocalStorage();\r\n      \r\n              e.target.reset();\r\n              displayTask()\r\n            });     \r\n        };\r\n\r\n\r\n        const displayTask = () => {\r\n\r\n            tasksWrapper.innerHTML = \"\";\r\n            showProgressBar();\r\n\r\n            category.tasks.forEach(task =>{\r\n\r\n                let taskElement = document.createElement('div');\r\n                taskElement.classList.add('task-item');\r\n              \r\n                const taskFirst = document.createElement('div');\r\n                taskFirst.classList.add('task-first');\r\n                taskElement.appendChild(taskFirst);\r\n        \r\n                const checkboxElement = document.createElement('input');\r\n                checkboxElement.classList.add('completed-checkbox');\r\n                checkboxElement.type = 'checkbox';\r\n                checkboxElement.id = task.id;\r\n                checkboxElement.checked = task.complete;\r\n                taskFirst.appendChild(checkboxElement);\r\n              \r\n                const taskName = document.createElement('p')\r\n                taskName.classList.add('todo-text');\r\n                taskName.innerHTML = `${task.taskItemName}`\r\n                taskFirst.appendChild(taskName);\r\n        \r\n                showTasksCount();\r\n              \r\n                const countDown = document.createElement('div');\r\n                countDown.classList.add('timer-container')\r\n                taskFirst.appendChild(countDown);\r\n        \r\n                tasksWrapper.appendChild(taskElement);\r\n                \r\n\r\n\r\n\r\n                //PROGRESS BAR\r\n                class ProgressBar {\r\n                    constructor (element, initialValue = 0) {\r\n                  \r\n                      this.valueElement = progressBarValue;\r\n                      this.fillElement = progressBarFill;\r\n                  \r\n                      this.setValue(initialValue)\r\n                    }\r\n                  \r\n                    setValue (newValue) {\r\n                      if (isNaN(newValue)) {\r\n                        return 0;\r\n                      }\r\n          \r\n                      if (newValue <= 0) {\r\n                        newValue = 0;\r\n                      }\r\n                  \r\n                      if(newValue > 100) {\r\n                        newValue = 100;\r\n                      }\r\n                  \r\n                      this.value = newValue;\r\n                      this.update();\r\n                    }\r\n                  \r\n                    update(){\r\n                      const percentage = this.value + '%';\r\n                  \r\n                      this.fillElement.style.width = percentage;\r\n                      this.valueElement.textContent = percentage;\r\n                  \r\n                    } \r\n                };  \r\n                  \r\n                new ProgressBar(progressBar, category.taskRatio);\r\n                \r\n\r\n                //COUNTDOWN TIMER  \r\n                class Timer {\r\n                    constructor(root) {\r\n                        root.innerHTML = Timer.getHTML();\r\n                            \r\n                        this.el = {\r\n                            minutes: root.querySelector('.timer__part--minutes'),\r\n                            seconds: root.querySelector('.timer__part--seconds'),\r\n                            control: root.querySelector('.timer__btn--control'),\r\n                            reset: root.querySelector('.timer__btn--reset'),\r\n                            timeForm: root.querySelector('.time-form'),\r\n                            timeValue: root.querySelector('.time-value'),\r\n                            notificationBox: root.querySelector('.notification-time-box'),\r\n                            closeBoxButton: root.querySelector('.btn-close-box'),\r\n                        };            \r\n                    \r\n                        this.interval = null;\r\n                        this.remainingSeconds = task.remainingTime;\r\n                    \r\n                        this.start();\r\n                        this.stop();\r\n                \r\n                        this.updateInterfaceTime();\r\n                        this.updateInterfaceControls();\r\n                    \r\n                    \r\n                        this.el.control.addEventListener('click', (e) => {\r\n\r\n            \r\n                            if (this.interval === null) {\r\n                            this.start();\r\n                            } else {\r\n                            this.stop();\r\n                            this.updateRemainingTime();\r\n                            }\r\n                    \r\n                        });\r\n                        \r\n                        this.el.reset.addEventListener('click', (e) => {\r\n            \r\n                            //Show Input Box\r\n                            this.el.notificationBox.style.display = 'flex';\r\n                            this.el.notificationBox.style.zIndex = \"100\";\r\n                        });\r\n            \r\n            \r\n                        //Close Notification/Put Time Value Box\r\n                        this.el.closeBoxButton.addEventListener('click', e => {\r\n            \r\n                            this.el.notificationBox.style.display = 'none';\r\n                        });\r\n            \r\n            \r\n                        this.el.timeForm.addEventListener('submit' , e => {\r\n                            e.preventDefault();\r\n                            const inputeMinutes = this.el.timeValue.value;\r\n\r\n                            \r\n                            const thisCategoryId = e.currentTarget.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n                            const thisTaskId = e.currentTarget.parentElement.parentElement.parentElement.parentElement.previousSibling.previousSibling.id;\r\n            \r\n                            const selectedCategory = categories.find(category => category.id === thisCategoryId );\r\n                            const selectedTask = selectedCategory.tasks.find(task => task.id === thisTaskId);\r\n            \r\n                            selectedTask.remainingTime.pop();\r\n                            selectedTask.remainingTime.push(inputeMinutes);\r\n                            saveToLocalStorage();\r\n            \r\n                            this.el.notificationBox.style.display = 'none';\r\n                            e.target.reset();\r\n            \r\n                            if(inputeMinutes < 60) {\r\n                            this.stop();\r\n                            \r\n                            this.remainingSeconds = selectedTask.remainingTime * 60;\r\n                            this.updateRemainingTime();\r\n                            this.updateInterfaceTime();               \r\n                            };\r\n            \r\n                            \r\n                            checkboxElement.checked = false;\r\n                            task.complete = false;\r\n                            saveToLocalStorage();\r\n                            showTasksCount();\r\n\r\n                            updateTasksRatio(thisCategoryId);\r\n            \r\n                            new ProgressBar(progressBar, category.taskRatio); \r\n                        });\r\n        \r\n                    };\r\n        \r\n                    //Functions\r\n                    updateRemainingTime(){\r\n                        task.remainingTime.pop();\r\n                        task.remainingTime.push(this.remainingSeconds);\r\n                        localStorage.setItem('categories', JSON.stringify(categories));\r\n\r\n                        console.log('update ramaining time')\r\n                    };\r\n        \r\n                \r\n                    updateInterfaceControls(){\r\n                        if(this.interval === null){\r\n                            this.el.control.innerHTML =`<p>play</p>`;\r\n                            this.el.control.classList.add('timer__btn--start');\r\n                            this.el.control.classList.remove('timer__btn--stop');\r\n                        } else {\r\n                            this.el.control.innerHTML =`<p>pause</p>`;\r\n                            this.el.control.classList.add('timer__btn--stop');\r\n                            this.el.control.classList.remove('timer__btn--start');\r\n                    \r\n                        }\r\n                    };\r\n                \r\n                    updateInterfaceTime() {\r\n                        const minutes = Math.floor(this.remainingSeconds / 60);\r\n                        const seconds = this.remainingSeconds % 60;\r\n                    \r\n                        this.el.minutes.textContent = minutes.toString().padStart(2, '0');\r\n                        this.el.seconds.textContent = seconds.toString().padStart(2, '0');\r\n                    };\r\n                \r\n                    start(){\r\n\r\n                        if(this.remainingSeconds === 0 || this.remainingSeconds === null ) return\r\n                \r\n                            this.interval = setInterval(() =>{\r\n                \r\n                                this.remainingSeconds--;\r\n                                this.updateInterfaceTime();\r\n                        \r\n                                if (this.remainingSeconds === 0) {\r\n                                this.stop();\r\n                                checkboxElement.checked = true;\r\n                                task.complete = true;\r\n                                showTasksCount();\r\n                                this.updateRemainingTime();\r\n                                saveToLocalStorage();\r\n                                }\r\n                        \r\n                            }, 1000);\r\n                        \r\n                            this.updateInterfaceControls();\r\n                            \r\n                        }\r\n                    \r\n                        stop(){\r\n                        clearInterval(this.interval);\r\n                        this.interval = null;\r\n                        this.updateInterfaceControls();\r\n                \r\n                    };\r\n                \r\n                    static getHTML(){\r\n                        return `\r\n                        <div class=\"notification-time-box glassmorphism-card\">\r\n                            <div class=\"set-time-box\">\r\n                                <div class=\"set-time-box__content\">\r\n                                    <h2 class=\"time-title\">Put Time</h2>\r\n                                    <button class=\"btn-close-box\">\r\n                                    <i class=\"fa-solid fa-circle-xmark\"></i>\r\n                                    </button>\r\n                                </div>\r\n                \r\n                                <div class=\"set-time-box__input-wrapper\">\r\n                                    <form class=\"time-form\">\r\n                                        <input\r\n                                            class=\"time-value\"\r\n                                            id=\"time-value\"\r\n                                            type=\"input\"\r\n                                            placeholder=\"e.g 20 etc\"\r\n                                        />\r\n                                        <input class=\"add-value-btn\" type=\"submit\" value=\"Add Time\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <span class=\"timer__part timer__part--minutes\">00</span>\r\n                        <span class=\"timer__part timer__part--semicolons\">:</span>\r\n                        <span class=\"timer__part timer__part--seconds\">00</span>\r\n                    \r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"timer__btn timer__btn--control timer__start\"\r\n                        >\r\n                        </button>\r\n                    \r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"timer__btn timer__btn--reset timer__setup\"\r\n                        >\r\n                            <p>setup</p>\r\n                        </button>`\r\n                    }\r\n                };\r\n                new Timer(countDown); \r\n\r\n                //SHOW UPDATE MESSAGE TASK COUNT\r\n                function showTasksCount(){\r\n\r\n                    const incompleteTaskCount = category.tasks.filter(task => !task.complete).length;\r\n                    const completeTaskCount = category.tasks.filter(task => task.complete).length;\r\n          \r\n                    if(incompleteTaskCount === 0){\r\n                      tasksCounter.innerText = 'You have done everything! Good Job!'\r\n                    } else {\r\n                      let taskRatio = Math.floor((100 * completeTaskCount) / category.tasks.length)\r\n                      const taskString = incompleteTaskCount === 1 ? \"task\" : \"tasks\"\r\n                      tasksCounter.innerText = `${incompleteTaskCount} ${taskString} remaining ${taskRatio}% done` \r\n                    }       \r\n                };\r\n\r\n                checkboxElement.addEventListener('click', e => {\r\n                    checkboxElement.checked;\r\n                    let thisCategoryId = checkboxElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n                    const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n                    const selectedTask = selectedCategory.tasks.find(task => task.id === e.target.id);\r\n                    selectedTask.complete = e.target.checked\r\n                    saveToLocalStorage()\r\n                    showTasksCount()\r\n          \r\n                    updateTasksRatio(thisCategoryId);\r\n          \r\n                    new ProgressBar(progressBar, selectedCategory.taskRatio);  \r\n          \r\n                });\r\n\r\n            });\r\n        };\r\n        displayTask();\r\n\r\n    });\r\n};\r\n\r\n\r\n//LOCAL STORAGE - SAVE TO LOCAL STORAGE\r\nconst saveToLocalStorage = () => {\r\n    localStorage.setItem('categories', JSON.stringify(categories));\r\n    localStorage.setItem('category.selectedCategoryId', selectedCategoryId);\r\n};\r\n\r\n\r\n\r\n// ****** EVENT LISTENERS **********\r\nwindow.addEventListener('DOMContentLoaded', e => {\r\n\r\n    if(categories.length !== 0){\r\n        welcomePage.style.display = \"none\"\r\n        itemsListPage.style.transform = \"translateX(0)\";\r\n        itemsListPage.style.display = \"flex\";\r\n        displayCategory();\r\n    };  \r\n\r\n    getCurrentDate();\r\n    updateCategoryCounter();\r\n    \r\n});\r\n\r\n// SELECTED CATEGORY ID\r\n\r\nnextPageButton.addEventListener('click', leaveWelcomePage);\r\n\r\nform.addEventListener('submit', e =>{\r\n    e.preventDefault()\r\n  \r\n    if (categoryInput == null || categoryInput === '') return;\r\n  \r\n    const category = {\r\n  \r\n      categoryName: categoryInput.value.trim(),\r\n      id: new Date().getTime().toString(),\r\n      taskRatio: [],\r\n      tasks: [],\r\n    };\r\n\r\n    categories.push(category);\r\n    saveToLocalStorage();\r\n    e.target.reset();\r\n    \r\n    displayCategory();\r\n    updateCategoryCounter();\r\n\r\n});\r\n"]}