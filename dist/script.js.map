{"version":3,"sources":["script.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","welcomePage","document","querySelector","itemsListPage","nextPageButton","displayCurrentDate","form","getElementById","categoryInput","categoriesConteiner","categories","JSON","parse","localStorage","getItem","selectedCategoryId","categoriesCounter","setHeightContainer","infoHeight","getBoundingClientRect","height","leaveWelcomePage","e","style","transform","addEventListener","display","getCurrentDate","date","Date","clientTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","currentDate","dateStyle","concat","format","innerHTML","updateCategoryCounter","innerText","categoryString","displayCategory","forEach","category","categoryWrapper","createElement","classList","add","categoryItem","id","appendChild","categoryItemTask","categoryName","editDeleteBtnContainer","editBtn","deleteBtn","openButton","currentTarget","parentElement","window","filter","item","saveToLocalStorage","removeAttribute","value","setSelectionRange","focus","setAttribute","tasksCounter","progressBar","progressBarValue","progressBarFill","taskElementsContainer","tasksWrapper","showProgressBar","tasks","openElement","contains","remove","taskForms","querySelectorAll","_loop","preventDefault","thisCategoryId","task","taskItemName","getTime","toString","remainingTime","complete","selectedCategory","find","push","reset","displayTask","taskElement","taskFirst","checkboxElement","type","checked","taskName","showTasksCount","countDown","completeTaskCount","taskRatioNumber","Math","floor","taskRatio","pop","ProgressBar","element","initialValue","arguments","this","valueElement","fillElement","setValue","newValue","isNaN","update","percentage","width","textContent","Timer","root","_this","getHTML","el","minutes","seconds","control","timeForm","timeValue","notificationBox","closeBoxButton","interval","remainingSeconds","start","stop","updateInterfaceTime","updateInterfaceControls","updateRemainingTime","zIndex","inputeMinutes","thisTaskId","previousSibling","selectedTask","setItem","stringify","padStart","_this2","setInterval","clearInterval","incompleteTaskCount","taskString","trim"],"mappings":"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","file":"script.js","sourcesContent":["// ****** SELECT ITEMS **********\r\n\r\nconst welcomePage = document.querySelector('.welcome-page__container');\r\nconst itemsListPage = document.querySelector('.items-container');\r\nconst nextPageButton = document.querySelector('.welcome-page__btn');\r\n\r\nconst displayCurrentDate = document.querySelector('.text-wrapper');\r\n\r\nconst form = document.getElementById('new-category-form');\r\nconst categoryInput = document.getElementById('category-name');\r\nconst categoriesConteiner = document.querySelector('.category-box-container');\r\n\r\nlet categories = JSON.parse(localStorage.getItem('categories')) || [];\r\nlet selectedCategoryId = localStorage.getItem('category.selectedCategoryId');\r\n\r\nconst categoriesCounter = document.querySelector('.category-counter');\r\nconst setHeightContainer = document.querySelector('.category-box-container');\r\nconst infoHeight = setHeightContainer.getBoundingClientRect().height; ///????????\r\n\r\n\r\n\r\n\r\n\r\n// ****** FUNCTIONS **********\r\n\r\n// PAGE TRANSITION\r\nconst leaveWelcomePage = (e) => {\r\n    \r\n    welcomePage.style.transform = \"translateX(-100%)\";\r\n    welcomePage.addEventListener(\"transitionend\", (e) => {\r\n        welcomePage.style.display = \"none\"\r\n    });\r\n    if(categories.length == 0 || categories.length !== 0) {\r\n      itemsListPage.style.transform = \"translateX(0)\";\r\n      itemsListPage.style.display = \"flex\";\r\n    }\r\n};\r\n\r\n// CURRENT DATE\r\nconst getCurrentDate = () => {\r\n    const date = new Date();\r\n    const clientTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    const currentDate = new Intl.DateTimeFormat('en-GB', { dateStyle: 'full', timeZone: `${clientTimeZone}`}).format(date);\r\n    displayCurrentDate.innerHTML = `Today is, ${currentDate}`;\r\n};\r\n\r\n\r\n//SHOW / UPDATE CATEGORY COUNTER/NUMBER\r\nconst updateCategoryCounter = () => {\r\n \r\n    if (categories.length === 0 ) {\r\n       categoriesCounter.innerText = \"You don't have any categories\";\r\n    } else {\r\n      const categoryString = categories.length === 1 ? \"category\" : \"categories\"\r\n      categoriesCounter.innerText = `You have ${categories.length} ${categoryString}`;\r\n      \r\n    }  \r\n};\r\n\r\n//RENDER CATEGORY\r\nconst displayCategory = () => {\r\n    categoriesConteiner.innerHTML = '';\r\n\r\n    categories.forEach(category => {\r\n\r\n        const categoryWrapper = document.createElement('div');\r\n        categoryWrapper.classList.add('category-wrapper');\r\n\r\n        const categoryItem = document.createElement('li');\r\n        categoryItem.classList.add('category-box', 'glassmorphism-card');\r\n        categoryItem.id = category.id;\r\n        categoryWrapper.appendChild(categoryItem);   \r\n\r\n        const categoryItemTask = document.createElement('div');\r\n        categoryItemTask.classList.add('category-box__task');\r\n        categoryItemTask.innerHTML = `<input class=\"category-box__name\" type=\"text\" value=\"${category.categoryName}\" readonly>`;\r\n        categoryItem.appendChild(categoryItemTask);\r\n\r\n        const editDeleteBtnContainer = document.createElement('div');\r\n        editDeleteBtnContainer.classList.add('btn-container');\r\n        categoryItem.appendChild(editDeleteBtnContainer);\r\n\r\n        const editBtn = document.createElement('button');\r\n        editBtn.classList.add('edit-btn');\r\n        editBtn.innerHTML = `<i class=\"fas fa-edit\"></i>`;\r\n        editDeleteBtnContainer.appendChild(editBtn);\r\n\r\n        const deleteBtn = document.createElement('button');\r\n        deleteBtn.classList.add('delete-btn');\r\n        deleteBtn.innerHTML = `<i class=\"fas fa-trash\"></i>`;\r\n        editDeleteBtnContainer.appendChild(deleteBtn);\r\n\r\n        const openButton = document.createElement('button');\r\n        openButton.innerHTML = 'OPEN';\r\n        openButton.classList.add('button-open');\r\n        editDeleteBtnContainer.appendChild(openButton);\r\n\r\n        deleteBtn.addEventListener('click', deleteElement); //DELETE BUTTON\r\n        editBtn.addEventListener('click', editElement); // EDIT BUTTON\r\n\r\n        const tasksCounter = document.createElement('p');\r\n        tasksCounter.classList.add('tasks-counter');\r\n        tasksCounter.innerHTML = \"Click Open and add task/s\"\r\n        categoryItem.appendChild(tasksCounter);\r\n\r\n        const progressBar = document.createElement('div');\r\n        progressBar.classList.add('progress-bar');\r\n        categoryItem.appendChild(progressBar);\r\n    \r\n        const progressBarValue = document.createElement('div');\r\n        progressBarValue.classList.add('progress-bar-value');\r\n        progressBar.appendChild(progressBarValue);\r\n    \r\n        const progressBarFill = document.createElement('div');\r\n        progressBarFill.classList.add('progress-bar-fill');\r\n        progressBar.appendChild(progressBarFill);\r\n\r\n        const taskElementsContainer = document.createElement('div');\r\n        taskElementsContainer.classList.add('task-elements-container');\r\n        taskElementsContainer.innerHTML = `\r\n        <form class=\"new-task-form\">\r\n          <input\r\n            class=\"task-input\"\r\n            type=\"text\"\r\n            placeholder=\"Name a new task and enter/click to add...\"\r\n          />\r\n          <input\r\n            class=\"create-task-btn\"\r\n            type=\"submit\"\r\n            value=\"Create task\"\r\n          />\r\n        </form>` \r\n\r\n        const tasksWrapper = document.createElement('div');\r\n        tasksWrapper.classList.add('tasks-wrapper');\r\n        taskElementsContainer.appendChild(tasksWrapper);\r\n    \r\n        categoryItem.appendChild(taskElementsContainer);\r\n\r\n        categoriesConteiner.appendChild(categoryWrapper); //APPEND TO MAIN CONTAINER\r\n        showProgressBar();\r\n\r\n\r\n        function showProgressBar(){\r\n          if(category.tasks.length === 0){\r\n                progressBar.style.display = 'none'\r\n            } else {\r\n                progressBar.style.display = 'block'\r\n            }\r\n        }\r\n    \r\n\r\n        //DELETE FUNCTION\r\n        function deleteElement(e){\r\n           \r\n            let thisItem = e.currentTarget.parentElement.parentElement.parentElement;\r\n            thisItem.classList.add('fall');\r\n\r\n            window.addEventListener('transitionend', function(){\r\n                categories = categories.filter(item => item !== category);\r\n                selectedCategoryId = null;\r\n                \r\n                saveToLocalStorage();\r\n                displayCategory();\r\n                updateCategoryCounter(); \r\n\r\n            });\r\n        };\r\n  \r\n        //EDIT FUNCTION\r\n        function editElement(e){\r\n  \r\n            const input = categoryItem.querySelector('.category-box__name')\r\n            input.removeAttribute('readonly');\r\n    \r\n            //Cursor at the end of text\r\n            input.addEventListener('focus', e => {\r\n            const { value } = e.target;\r\n            e.target.setSelectionRange(value.length, value.length);\r\n            });\r\n    \r\n            input.focus();\r\n            input.addEventListener('blur', (e) => {\r\n            input.setAttribute('readonly', true);\r\n            category.categoryName = e.target.value;\r\n            saveToLocalStorage();\r\n            displayCategory();\r\n            });   \r\n        };\r\n\r\n        function openElement(){\r\n            categoryItem.classList.add('fullscreen'); \r\n            openButton.innerText = 'CLOSE';\r\n            taskElementsContainer.style.display = 'flex';\r\n            categoryItem.style.height = `${infoHeight}px`;\r\n        };\r\n\r\n\r\n        //SAVE FULLSCREEN OPTION ON REFRESH\r\n        if (category.id === selectedCategoryId) { \r\n          openElement();\r\n        };\r\n\r\n      \r\n        //CATEGORY BOX TO FULLSCREEN \r\n        openButton.addEventListener('click', e => {\r\n\r\n            selectedCategoryId = e.target.parentElement.parentElement.id;\r\n            saveToLocalStorage();\r\n                        \r\n            if (categoryItem.classList.contains('fullscreen')){\r\n                categoryItem.classList.remove('fullscreen');\r\n                taskElementsContainer.style.display = 'none'\r\n                openButton.innerText = 'OPEN';\r\n                selectedCategoryId = null;\r\n                saveToLocalStorage();\r\n\r\n                categoryItem.style.height = 'auto';\r\n\r\n            } else {\r\n                openElement();\r\n\r\n                //const infoHeight = setHeightContainer.getBoundingClientRect().height;\r\n                //categoryItem.style.height = `${infoHeight}px`;\r\n            }\r\n        }); \r\n\r\n\r\n\r\n        //FUNCTIONS AND EVENT LISTENERS HANDEL INSIDE CATEGORY TASKS\r\n\r\n        const taskForms = document.querySelectorAll('.new-task-form');\r\n\r\n        //SUBMIT TASK \r\n        for(let i = 0; i < taskForms.length; i++){\r\n\r\n            taskForms[i].addEventListener('submit', e => {\r\n              e.preventDefault(); \r\n              const thisCategoryId = e.currentTarget.parentElement.parentElement.id;\r\n      \r\n              let task = {\r\n      \r\n                taskItemName: taskForms[i][0].value,\r\n                id: new Date().getTime().toString(),\r\n                remainingTime: [],\r\n                complete: false,\r\n      \r\n              };\r\n      \r\n              //if(taskItemName == null || taskItemName === '') return;\r\n      \r\n              const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n              selectedCategory.tasks.push(task);\r\n              saveToLocalStorage();\r\n      \r\n              updateCategoryCounter(thisCategoryId);\r\n              saveToLocalStorage();\r\n      \r\n              e.target.reset();\r\n              displayTask()\r\n            });     \r\n        };\r\n\r\n\r\n        const displayTask = () => {\r\n\r\n            tasksWrapper.innerHTML = \"\";\r\n            showProgressBar();\r\n\r\n            category.tasks.forEach(task =>{\r\n\r\n                let taskElement = document.createElement('div');\r\n                taskElement.classList.add('task-item');\r\n              \r\n                const taskFirst = document.createElement('div');\r\n                taskFirst.classList.add('task-first');\r\n                taskElement.appendChild(taskFirst);\r\n        \r\n                const checkboxElement = document.createElement('input');\r\n                checkboxElement.classList.add('completed-checkbox');\r\n                checkboxElement.type = 'checkbox';\r\n                checkboxElement.id = task.id;\r\n                checkboxElement.checked = task.complete;\r\n                taskFirst.appendChild(checkboxElement);\r\n              \r\n                const taskName = document.createElement('p')\r\n                taskName.classList.add('todo-text');\r\n                taskName.innerHTML = `${task.taskItemName}`\r\n                taskFirst.appendChild(taskName);\r\n        \r\n                showTasksCount();\r\n              \r\n                const countDown = document.createElement('div');\r\n                countDown.classList.add('timer-container')\r\n                taskFirst.appendChild(countDown);\r\n        \r\n                tasksWrapper.appendChild(taskElement);\r\n        \r\n                const completeTaskCount = category.tasks.filter(task => task.complete).length;\r\n                let taskRatioNumber = Math.floor((100 * completeTaskCount) / category.tasks.length);\r\n                category.taskRatio.pop();\r\n                category.taskRatio.push(taskRatioNumber);\r\n                saveToLocalStorage();\r\n\r\n\r\n                //PROGRESS BAR\r\n                class ProgressBar {\r\n                    constructor (element, initialValue = 0) {\r\n                  \r\n                      this.valueElement = progressBarValue;\r\n                      this.fillElement = progressBarFill;\r\n                  \r\n                      this.setValue(initialValue)\r\n                    }\r\n                  \r\n                    setValue (newValue) {\r\n                      if (isNaN(newValue)) {\r\n                        return 0;\r\n                      }\r\n          \r\n                      if (newValue <= 0) {\r\n                        newValue = 0;\r\n                      }\r\n                  \r\n                      if(newValue > 100) {\r\n                        newValue = 100;\r\n                      }\r\n                  \r\n                      this.value = newValue;\r\n                      this.update();\r\n                    }\r\n                  \r\n                    update(){\r\n                      const percentage = this.value + '%';\r\n                  \r\n                      this.fillElement.style.width = percentage;\r\n                      this.valueElement.textContent = percentage;\r\n                  \r\n                    } \r\n                };  \r\n                  \r\n                new ProgressBar(progressBar, category.taskRatio);\r\n                \r\n\r\n                //COUNTDOWN TIMER  \r\n                class Timer {\r\n                    constructor(root) {\r\n                    root.innerHTML = Timer.getHTML();\r\n                        \r\n                    this.el = {\r\n                        minutes: root.querySelector('.timer__part--minutes'),\r\n                        seconds: root.querySelector('.timer__part--seconds'),\r\n                        control: root.querySelector('.timer__btn--control'),\r\n                        reset: root.querySelector('.timer__btn--reset'),\r\n                        timeForm: root.querySelector('.time-form'),\r\n                        timeValue: root.querySelector('.time-value'),\r\n                        notificationBox: root.querySelector('.notification-time-box'),\r\n                        closeBoxButton: root.querySelector('.btn-close-box'),\r\n                    };            \r\n                \r\n                    this.interval = null;\r\n                    this.remainingSeconds = `${task.remainingTime}`;\r\n                \r\n                    this.start();\r\n                    this.stop();\r\n            \r\n                    this.updateInterfaceTime();\r\n                    this.updateInterfaceControls();\r\n                \r\n                \r\n                    this.el.control.addEventListener('click', (e) => {\r\n        \r\n                        if (this.interval === null) {\r\n                        this.start();\r\n                        } else {\r\n                        this.stop();\r\n                        this.updateRemainingTime();\r\n                        }\r\n                \r\n                    });\r\n        \r\n                \r\n                    \r\n                    this.el.reset.addEventListener('click', (e) => {\r\n        \r\n                        //Show Input Box\r\n                        this.el.notificationBox.style.display = 'flex';\r\n                        this.el.notificationBox.style.zIndex = \"100\";\r\n                    });\r\n        \r\n        \r\n                    //Close Notification/Put Time Value Box\r\n                    this.el.closeBoxButton.addEventListener('click', e => {\r\n        \r\n                        this.el.notificationBox.style.display = 'none';\r\n                    });\r\n        \r\n        \r\n                    this.el.timeForm.addEventListener('submit' , e => {\r\n                        e.preventDefault();\r\n                        const inputeMinutes = this.el.timeValue.value;\r\n        \r\n                        \r\n                        const thisCategoryId = e.currentTarget.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n                        const thisTaskId = e.currentTarget.parentElement.parentElement.parentElement.parentElement.previousSibling.previousSibling.id;\r\n        \r\n                        const selectedCategory = categories.find(category => category.id === thisCategoryId );\r\n                        const selectedTask = selectedCategory.tasks.find(task => task.id === thisTaskId);\r\n        \r\n                        selectedTask.remainingTime.pop();\r\n                        selectedTask.remainingTime.push(inputeMinutes);\r\n                        saveToLocalStorage();\r\n        \r\n                        this.el.notificationBox.style.display = 'none';\r\n                        e.target.reset();\r\n        \r\n                        if(inputeMinutes < 60) {\r\n                        this.stop();\r\n                        \r\n                        this.remainingSeconds = `${selectedTask.remainingTime}` * 60;\r\n                        this.updateRemainingTime();\r\n                        this.updateInterfaceTime();               \r\n                        };\r\n        \r\n                        \r\n                        checkboxElement.checked = false;\r\n                        task.complete = false;\r\n                        saveToLocalStorage();\r\n                        showTasksCount();\r\n        \r\n                        let completeTaskCount = category.tasks.filter(task => task.complete).length;\r\n                        let taskRatioNumber = Math.floor((100 * completeTaskCount) / category.tasks.length);\r\n                        category.taskRatio.pop();\r\n                        category.taskRatio.push(taskRatioNumber);\r\n                        localStorage.setItem('categories', JSON.stringify(categories));\r\n        \r\n                        new ProgressBar(progressBar, category.taskRatio); \r\n                    });\r\n        \r\n                    };\r\n        \r\n                    //Functions\r\n                    updateRemainingTime(){\r\n                        task.remainingTime.pop();\r\n                        task.remainingTime.push(this.remainingSeconds);\r\n                        localStorage.setItem('categories', JSON.stringify(categories));\r\n                    };\r\n                    \r\n        \r\n                    updateThisTasksRatio(thisCategoryId){\r\n                        this.categories = JSON.parse(localStorage.getItem('categories')) || [];\r\n                        this.selectedCategory = this.categories.find(category => category.id === thisCategoryId);\r\n                        this.completeTaskCount = this.selectedCategory.tasks.filter(task => task.complete).length;\r\n                        this.taskRatioNumber = Math.floor((100 * this.completeTaskCount) / this.selectedCategory.tasks.length);\r\n                        this.selectedCategory.taskRatio.pop();\r\n                        this.selectedCategory.taskRatio.push(this.taskRatioNumber);\r\n            \r\n                        saveToLocalStorage();\r\n                        new ProgressBar(progressBar, this.selectedCategory.taskRatio);  \r\n                    }\r\n        \r\n        \r\n                \r\n                    updateInterfaceControls(){\r\n                        if(this.interval === null){\r\n                            this.el.control.innerHTML =`<p>play</p>`;\r\n                            this.el.control.classList.add('timer__btn--start');\r\n                            this.el.control.classList.remove('timer__btn--stop');\r\n                        } else {\r\n                            this.el.control.innerHTML =`<p>pause</p>`;\r\n                            this.el.control.classList.add('timer__btn--stop');\r\n                            this.el.control.classList.remove('timer__btn--start');\r\n                    \r\n                        }\r\n                    }\r\n                \r\n                    updateInterfaceTime() {\r\n                        const minutes = Math.floor(this.remainingSeconds / 60);\r\n                        const seconds = this.remainingSeconds % 60;\r\n                    \r\n                        this.el.minutes.textContent = minutes.toString().padStart(2, '0');\r\n                        this.el.seconds.textContent = seconds.toString().padStart(2, '0');\r\n                    } \r\n                \r\n                    start(){\r\n                \r\n                        if(this.remainingSeconds === 0) return\r\n            \r\n                        this.interval = setInterval(() =>{\r\n            \r\n                            this.remainingSeconds--;\r\n                            this.updateInterfaceTime();\r\n                    \r\n                            if (this.remainingSeconds === 0) {\r\n                            this.stop();\r\n                            checkboxElement.checked = true;\r\n                            task.complete = true;\r\n                            showTasksCount();\r\n                            saveToLocalStorage();\r\n                            }\r\n                    \r\n                        }, 1000);\r\n                    \r\n                        this.updateInterfaceControls()\r\n                        }\r\n                    \r\n                        stop(){\r\n                        clearInterval(this.interval);\r\n                        this.interval = null;\r\n                        this.updateInterfaceControls();\r\n                \r\n                    }\r\n                \r\n                    static getHTML(){\r\n                        return `\r\n                        <div class=\"notification-time-box glassmorphism-card\">\r\n                            <div class=\"set-time-box\">\r\n                                <div class=\"set-time-box__content\">\r\n                                    <h2 class=\"time-title\">Put Time</h2>\r\n                                    <button class=\"btn-close-box\">\r\n                                    <i class=\"fa-solid fa-circle-xmark\"></i>\r\n                                    </button>\r\n                                </div>\r\n                \r\n                                <div class=\"set-time-box__input-wrapper\">\r\n                                    <form class=\"time-form\">\r\n                                        <input\r\n                                            class=\"time-value\"\r\n                                            id=\"time-value\"\r\n                                            type=\"input\"\r\n                                            placeholder=\"e.g 20 etc\"\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Time\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <span class=\"timer__part timer__part--minutes\">00</span>\r\n                        <span class=\"timer__part timer__part--semicolons\">:</span>\r\n                        <span class=\"timer__part timer__part--seconds\">00</span>\r\n                    \r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"timer__btn timer__btn--control timer__start\"\r\n                        >\r\n                        </button>\r\n                    \r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"timer__btn timer__btn--reset timer__setup\"\r\n                        >\r\n                            <p>setup</p>\r\n                        </button>`\r\n                    }\r\n                };\r\n                new Timer(countDown); \r\n\r\n                //SHOW UPDATE MESSAGE TASK COUNT\r\n                function showTasksCount(){\r\n\r\n                    const incompleteTaskCount = category.tasks.filter(task => !task.complete).length;\r\n                    const completeTaskCount = category.tasks.filter(task => task.complete).length;\r\n          \r\n                    if(incompleteTaskCount === 0){\r\n                      tasksCounter.innerText = 'You have done everything! Good Job!'\r\n                    } else {\r\n                      let taskRatio = Math.floor((100 * completeTaskCount) / category.tasks.length)\r\n                      const taskString = incompleteTaskCount === 1 ? \"task\" : \"tasks\"\r\n                      tasksCounter.innerText = `${incompleteTaskCount} ${taskString} remaining ${taskRatio}% done` \r\n                    }       \r\n                };\r\n\r\n                checkboxElement.addEventListener('click', e => {\r\n                    checkboxElement.checked;\r\n                    let thisCategoryId = checkboxElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n                    const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n                    const selectedTask = selectedCategory.tasks.find(task => task.id === e.target.id);\r\n                    selectedTask.complete = e.target.checked\r\n                    saveToLocalStorage()\r\n                    showTasksCount()\r\n          \r\n                    //updateTasksRatio(thisCategoryId);\r\n\r\n                    const completeTaskCount = selectedCategory.tasks.filter(task => task.complete).length;\r\n                    let taskRatioNumber = Math.floor((100 * completeTaskCount) / category.tasks.length);\r\n                    category.taskRatio.pop();\r\n                    category.taskRatio.push(taskRatioNumber);\r\n                    saveToLocalStorage();\r\n\r\n                    //  TRY TO COME UP WITH FUNCTION UPDATE TASK RATIO TAKING ID AS A PARAMETER\r\n          \r\n                    new ProgressBar(progressBar, selectedCategory.taskRatio);  \r\n          \r\n                });\r\n\r\n            });\r\n        };\r\n        displayTask();\r\n\r\n    });\r\n};\r\n\r\n\r\n//LOCAL STORAGE - SAVE TO LOCAL STORAGE\r\nconst saveToLocalStorage = () => {\r\n    localStorage.setItem('categories', JSON.stringify(categories));\r\n    localStorage.setItem('category.selectedCategoryId', selectedCategoryId);\r\n};\r\n\r\n\r\n\r\n// ****** EVENT LISTENERS **********\r\nwindow.addEventListener('DOMContentLoaded', e => {\r\n    getCurrentDate();\r\n    displayCategory();\r\n    updateCategoryCounter();\r\n});\r\n\r\n// SELECTED CATEGORY ID\r\n\r\n\r\nnextPageButton.addEventListener('click', leaveWelcomePage);\r\n\r\nform.addEventListener('submit', e =>{\r\n    e.preventDefault()\r\n  \r\n    if (categoryInput == null || categoryInput === '') return;\r\n  \r\n    const category = {\r\n  \r\n      categoryName: categoryInput.value.trim(),\r\n      id: new Date().getTime().toString(),\r\n      taskRatio: [],\r\n      tasks: [],\r\n    };\r\n\r\n    categories.push(category);\r\n    saveToLocalStorage();\r\n    e.target.reset();\r\n    \r\n    displayCategory();\r\n    updateCategoryCounter();\r\n\r\n});\r\n  \r\n\r\n\r\n\r\n\r\n\r\n// ****** LOCAL STORAGE **********"]}