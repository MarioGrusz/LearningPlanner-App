{"version":3,"sources":["script.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","welcomePage","document","querySelector","itemsListPage","nextPageButton","displayCurrentDate","nameInput","form","getElementById","categoryInput","categoriesConteiner","username","localStorage","getItem","categories","JSON","parse","selectedCategoryId","categoriesCounter","leaveWelcomePage","e","style","transform","addEventListener","display","getCurrentDate","date","Date","clientTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","currentDate","dateStyle","concat","format","innerHTML","updateCategoryCounter","innerText","categoryString","displayCategory","forEach","category","categoryWrapper","createElement","classList","add","categoryItem","id","appendChild","categoryItemTask","categoryName","editDeleteBtnContainer","editBtn","deleteBtn","openButton","currentTarget","parentElement","window","transitionEndHandler","filter","item","saveToLocalStorage","removeEventListener","removeAttribute","value","setSelectionRange","focus","setAttribute","tasksCounter","progressBar","progressBarValue","progressBarFill","taskElementsContainer","tasksWrapper","showProgressBar","tasks","contains","console","log","updateTasksRatio","thisCategoryId","selectedCategory","find","completeTaskCount","task","complete","taskRatioNumber","Math","floor","taskRatio","pop","push","toggle","taskForms","querySelectorAll","_loop","preventDefault","taskItemName","getTime","toString","remainingTime","reset","displayTask","taskElement","taskFirst","checkboxElement","type","checked","taskName","showTasksCount","countDown","ProgressBar","element","initialValue","arguments","this","valueElement","fillElement","setValue","newValue","isNaN","update","percentage","width","textContent","incompleteTaskCount","taskString","Timer","root","_this","getHTML","el","minutes","seconds","control","timeForm","timeValue","notificationBox","closeBoxButton","interval","remainingSeconds","start","stop","updateInterfaceTime","updateInterfaceControls","updateRemainingTime","zIndex","inputeMinutes","thisTaskId","previousSibling","selectedTask","setItem","stringify","remove","padStart","_this2","setInterval","clearInterval","trim"],"mappings":"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","file":"script.js","sourcesContent":["// ****** SELECT ITEMS **********\r\n\r\nconst welcomePage = document.querySelector('.welcome-page__container');\r\nconst itemsListPage = document.querySelector('.items-container');\r\nconst nextPageButton = document.querySelector('.welcome-page__btn');\r\n\r\nconst displayCurrentDate = document.querySelector('.text-wrapper');\r\nconst nameInput = document.querySelector('#name');\r\nconst form = document.getElementById('new-category-form');\r\nconst categoryInput = document.getElementById('category-name');\r\nconst categoriesConteiner = document.querySelector('.category-box-container');\r\n\r\nconst username = localStorage.getItem('username') || '';\r\nlet categories = JSON.parse(localStorage.getItem('categories')) || [];\r\nlet selectedCategoryId = localStorage.getItem('category.selectedCategoryId');\r\n\r\nconst categoriesCounter = document.querySelector('.category-counter');\r\n\r\n\r\n\r\n// ****** FUNCTIONS **********\r\n\r\n// PAGE TRANSITION\r\nconst leaveWelcomePage = (e) => {\r\n    \r\n    welcomePage.style.transform = \"translateX(-100%)\";\r\n    welcomePage.addEventListener(\"transitionend\", (e) => {\r\n        welcomePage.style.display = \"none\"\r\n    });\r\n    if(categories.length == 0 || categories.length !== 0) {\r\n      itemsListPage.style.transform = \"translateX(0)\";\r\n      itemsListPage.style.display = \"flex\";\r\n    }\r\n};\r\n\r\n\r\n\r\n// CURRENT DATE\r\nconst getCurrentDate = () => {\r\n    const date = new Date();\r\n    const clientTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    const currentDate = new Intl.DateTimeFormat('en-GB', { dateStyle: 'full', timeZone: `${clientTimeZone}`}).format(date);\r\n    displayCurrentDate.innerHTML = `Today is, ${currentDate}`;\r\n};\r\n\r\n\r\n//SHOW / UPDATE CATEGORY COUNTER/NUMBER\r\nconst updateCategoryCounter = () => {\r\n \r\n    if (categories.length === 0 ) {\r\n       categoriesCounter.innerText = \"You don't have any categories\";\r\n    } else {\r\n      const categoryString = categories.length === 1 ? \"category\" : \"categories\"\r\n      categoriesCounter.innerText = `You have ${categories.length} ${categoryString}`;\r\n      \r\n    }  \r\n};\r\n\r\n\r\n//RENDER CATEGORY\r\nconst displayCategory = () => {\r\n    categoriesConteiner.innerHTML = '';\r\n\r\n    categories.forEach(category => {\r\n\r\n        const categoryWrapper = document.createElement('div');\r\n        categoryWrapper.classList.add('category-wrapper');\r\n\r\n        const categoryItem = document.createElement('li');\r\n        categoryItem.classList.add('category-box', 'glassmorphism-card');\r\n        categoryItem.id = category.id;\r\n        categoryWrapper.appendChild(categoryItem);   \r\n\r\n        const categoryItemTask = document.createElement('div');\r\n        categoryItemTask.classList.add('category-box__task');\r\n        categoryItemTask.innerHTML = `<input class=\"category-box__name\" type=\"text\" value=\"${category.categoryName}\" readonly>`;\r\n        categoryItem.appendChild(categoryItemTask);\r\n\r\n        const editDeleteBtnContainer = document.createElement('div');\r\n        editDeleteBtnContainer.classList.add('btn-container');\r\n        categoryItem.appendChild(editDeleteBtnContainer);\r\n\r\n        const editBtn = document.createElement('button');\r\n        editBtn.classList.add('edit-btn');\r\n        editBtn.innerHTML = `<i class=\"fas fa-edit\"></i>`;\r\n        editDeleteBtnContainer.appendChild(editBtn);\r\n\r\n        const deleteBtn = document.createElement('button');\r\n        deleteBtn.classList.add('delete-btn');\r\n        deleteBtn.innerHTML = `<i class=\"fas fa-trash\"></i>`;\r\n        editDeleteBtnContainer.appendChild(deleteBtn);\r\n\r\n        const openButton = document.createElement('button');\r\n        openButton.innerHTML = 'OPEN';\r\n        openButton.classList.add('button-open');\r\n        editDeleteBtnContainer.appendChild(openButton);\r\n\r\n        deleteBtn.addEventListener('click', deleteElement); //DELETE BUTTON\r\n        editBtn.addEventListener('click', editElement); // EDIT BUTTON\r\n\r\n        const tasksCounter = document.createElement('p');\r\n        tasksCounter.classList.add('tasks-counter');\r\n        tasksCounter.innerHTML = \"Click Open and add task/s\"\r\n        categoryItem.appendChild(tasksCounter);\r\n\r\n        const progressBar = document.createElement('div');\r\n        progressBar.classList.add('progress-bar');\r\n        categoryItem.appendChild(progressBar);\r\n    \r\n        const progressBarValue = document.createElement('div');\r\n        progressBarValue.classList.add('progress-bar-value');\r\n        progressBar.appendChild(progressBarValue);\r\n    \r\n        const progressBarFill = document.createElement('div');\r\n        progressBarFill.classList.add('progress-bar-fill');\r\n        progressBar.appendChild(progressBarFill);\r\n\r\n        const taskElementsContainer = document.createElement('div');\r\n        taskElementsContainer.classList.add('task-elements-container');\r\n        taskElementsContainer.innerHTML = `\r\n        <form class=\"new-task-form\">\r\n          <input\r\n            class=\"task-input\"\r\n            type=\"text\"\r\n            placeholder=\"Add task...\"\r\n          />\r\n          <input\r\n            class=\"create-task-btn\"\r\n            type=\"submit\"\r\n            value=\"Create task\"\r\n          />\r\n        </form>` \r\n\r\n        const tasksWrapper = document.createElement('div');\r\n        tasksWrapper.classList.add('tasks-wrapper');\r\n        taskElementsContainer.appendChild(tasksWrapper);\r\n    \r\n        categoryItem.appendChild(taskElementsContainer);\r\n\r\n        categoriesConteiner.appendChild(categoryWrapper); //APPEND TO MAIN CONTAINER\r\n\r\n\r\n\r\n        function showProgressBar(){\r\n          if(category.tasks.length !== 0 && categoryItem.classList.contains('active')){\r\n                progressBar.style.display = 'block'\r\n                console.log('progress bar')\r\n            } else {\r\n                progressBar.style.display = 'none'\r\n            }\r\n        };\r\n    \r\n\r\n        //DELETE FUNCTION\r\n  \r\n        function deleteElement(e) {\r\n            let thisItem = e.currentTarget.parentElement.parentElement.parentElement;\r\n            thisItem.classList.add('fall');\r\n        \r\n            let transitionEndHandler = function(e) {\r\n                categories = categories.filter(item => item !== category);\r\n                selectedCategoryId = null;\r\n        \r\n                saveToLocalStorage();\r\n                displayCategory();\r\n                updateCategoryCounter();\r\n        \r\n                // Remove the transitionend event listener\r\n                window.removeEventListener('transitionend', transitionEndHandler);\r\n            };\r\n        \r\n            window.addEventListener('transitionend', transitionEndHandler);\r\n        }\r\n        \r\n        \r\n        //EDIT FUNCTION\r\n        function editElement(e){\r\n  \r\n            const input = categoryItem.querySelector('.category-box__name')\r\n            input.removeAttribute('readonly');\r\n    \r\n            //Cursor at the end of text\r\n            input.addEventListener('focus', e => {\r\n            const { value } = e.target;\r\n            e.target.setSelectionRange(value.length, value.length);\r\n            });\r\n    \r\n            input.focus();\r\n            input.addEventListener('blur', (e) => {\r\n            input.setAttribute('readonly', true);\r\n            category.categoryName = e.target.value;\r\n            saveToLocalStorage();\r\n            displayCategory();\r\n            });   \r\n        };\r\n\r\n        //Unfold/Fold category box\r\n        function toggleAccordion(event) {\r\n\r\n            //categoryItem.style.height = `${itemsListPage.getBoundingClientRect().height}px`;\r\n        \r\n            categoryItem.classList.toggle(\"active\");\r\n            taskElementsContainer.style.display = categoryItem.classList.contains('active') ? 'flex' : 'none';\r\n            openButton.innerText = categoryItem.classList.contains('active') ? 'CLOSE' : 'OPEN';\r\n            progressBar.style.display = categoryItem.classList.contains('active') ? 'block' : 'none';\r\n            categoryItem.classList.contains('active') ? showProgressBar() : undefined;\r\n        }\r\n\r\n\r\n        //SAVE FULLSCREEN OPTION ON REFRESH\r\n        if (category.id === selectedCategoryId) { \r\n            //openElment();\r\n        };\r\n\r\n        openButton.addEventListener('click', () => {\r\n            toggleAccordion()\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n        //UPDATE DONE/UNDONE TAKS RATIO\r\n        function updateTasksRatio(thisCategoryId) {\r\n            const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n            const completeTaskCount = selectedCategory.tasks.filter(task => task.complete).length;\r\n            let taskRatioNumber = Math.floor((100 * completeTaskCount) / category.tasks.length);\r\n            category.taskRatio.pop();\r\n            category.taskRatio.push(taskRatioNumber);\r\n            saveToLocalStorage();\r\n        };\r\n\r\n\r\n\r\n        //FUNCTIONS AND EVENT LISTENERS HANDEL INSIDE CATEGORY TASKS\r\n\r\n        const taskForms = document.querySelectorAll('.new-task-form');\r\n\r\n        //SUBMIT TASK \r\n        for(let i = 0; i < taskForms.length; i++){\r\n\r\n            taskForms[i].addEventListener('submit', e => {\r\n              e.preventDefault(); \r\n              const thisCategoryId = e.currentTarget.parentElement.parentElement.id;\r\n      \r\n              let task = {\r\n      \r\n                taskItemName: taskForms[i][0].value,\r\n                id: new Date().getTime().toString(),\r\n                remainingTime: [],\r\n                complete: false,\r\n      \r\n              };\r\n      \r\n              if(taskForms[i][0].value == null || taskForms[i][0].value === '') return;\r\n      \r\n              const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n              selectedCategory.tasks.push(task);\r\n              saveToLocalStorage();\r\n      \r\n              updateCategoryCounter(thisCategoryId);\r\n              updateTasksRatio(thisCategoryId);\r\n              saveToLocalStorage();\r\n      \r\n              e.target.reset();\r\n              displayTask()\r\n            });     \r\n        };\r\n\r\n\r\n        const displayTask = () => {\r\n\r\n            tasksWrapper.innerHTML = \"\";\r\n            showProgressBar();\r\n\r\n            category.tasks.forEach(task =>{\r\n\r\n                let taskElement = document.createElement('div');\r\n                taskElement.classList.add('task-item');\r\n              \r\n                const taskFirst = document.createElement('div');\r\n                taskFirst.classList.add('task-first');\r\n                taskElement.appendChild(taskFirst);\r\n        \r\n                const checkboxElement = document.createElement('input');\r\n                checkboxElement.classList.add('completed-checkbox');\r\n                checkboxElement.type = 'checkbox';\r\n                checkboxElement.id = task.id;\r\n                checkboxElement.checked = task.complete;\r\n                taskFirst.appendChild(checkboxElement);\r\n              \r\n                const taskName = document.createElement('p')\r\n                taskName.classList.add('todo-text');\r\n                taskName.innerHTML = `${task.taskItemName}`\r\n                taskFirst.appendChild(taskName);\r\n        \r\n                showTasksCount();\r\n              \r\n                const countDown = document.createElement('div');\r\n                countDown.classList.add('timer-container')\r\n                taskFirst.appendChild(countDown);\r\n        \r\n                tasksWrapper.appendChild(taskElement);\r\n                \r\n\r\n\r\n\r\n                //PROGRESS BAR\r\n                class ProgressBar {\r\n                    constructor (element, initialValue = 0) {\r\n                  \r\n                      this.valueElement = progressBarValue;\r\n                      this.fillElement = progressBarFill;\r\n                  \r\n                      this.setValue(initialValue)\r\n                    }\r\n                  \r\n                    setValue (newValue) {\r\n                      if (isNaN(newValue)) {\r\n                        return 0;\r\n                      }\r\n          \r\n                      if (newValue <= 0) {\r\n                        newValue = 0;\r\n                      }\r\n                  \r\n                      if(newValue > 100) {\r\n                        newValue = 100;\r\n                      }\r\n                  \r\n                      this.value = newValue;\r\n                      this.update();\r\n                    }\r\n                  \r\n                    update(){\r\n                      const percentage = this.value + '%';\r\n                  \r\n                      this.fillElement.style.width = percentage;\r\n                      this.valueElement.textContent = percentage;\r\n                  \r\n                    } \r\n                };  \r\n                  \r\n                new ProgressBar(progressBar, category.taskRatio);\r\n                \r\n\r\n                //COUNTDOWN TIMER  \r\n                class Timer {\r\n                    constructor(root) {\r\n                        root.innerHTML = Timer.getHTML();\r\n                            \r\n                        this.el = {\r\n                            minutes: root.querySelector('.timer__part--minutes'),\r\n                            seconds: root.querySelector('.timer__part--seconds'),\r\n                            control: root.querySelector('.timer__btn--control'),\r\n                            reset: root.querySelector('.timer__btn--reset'),\r\n                            timeForm: root.querySelector('.time-form'),\r\n                            timeValue: root.querySelector('.time-value'),\r\n                            notificationBox: root.querySelector('.notification-time-box'),\r\n                            closeBoxButton: root.querySelector('.btn-close-box'),\r\n                        };            \r\n                    \r\n                        this.interval = null;\r\n                        this.remainingSeconds = task.remainingTime;\r\n                    \r\n                        this.start();\r\n                        this.stop();\r\n                \r\n                        this.updateInterfaceTime();\r\n                        this.updateInterfaceControls();\r\n                    \r\n                    \r\n                        this.el.control.addEventListener('click', (e) => {\r\n                            const target =  e.currentTarget.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n            \r\n                            if (this.interval === null) {\r\n                            this.start(target);\r\n                            } else {\r\n                            this.stop();\r\n                            this.updateRemainingTime();\r\n                            }\r\n                    \r\n                        });\r\n                        \r\n                        this.el.reset.addEventListener('click', (e) => {\r\n            \r\n                            //Show Input Box\r\n                            this.el.notificationBox.style.display = 'flex';\r\n                            this.el.notificationBox.style.zIndex = \"100\";\r\n                        });\r\n            \r\n            \r\n                        //Close Notification/Put Time Value Box\r\n                        this.el.closeBoxButton.addEventListener('click', e => {\r\n            \r\n                            this.el.notificationBox.style.display = 'none';\r\n                        });\r\n            \r\n            \r\n                        this.el.timeForm.addEventListener('submit' , e => {\r\n                            e.preventDefault();\r\n                            const inputeMinutes = this.el.timeValue.value;\r\n\r\n                            \r\n                            const thisCategoryId = e.currentTarget.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n                            const thisTaskId = e.currentTarget.parentElement.parentElement.parentElement.parentElement.previousSibling.previousSibling.id;\r\n            \r\n                            const selectedCategory = categories.find(category => category.id === thisCategoryId );\r\n                            const selectedTask = selectedCategory.tasks.find(task => task.id === thisTaskId);\r\n            \r\n                            selectedTask.remainingTime.pop();\r\n                            selectedTask.remainingTime.push(inputeMinutes);\r\n                            saveToLocalStorage();\r\n            \r\n                            this.el.notificationBox.style.display = 'none';\r\n                            e.target.reset();\r\n            \r\n                            if(inputeMinutes < 60) {\r\n                            this.stop();\r\n                            \r\n                            this.remainingSeconds = selectedTask.remainingTime * 60;\r\n                            this.updateRemainingTime();\r\n                            this.updateInterfaceTime();\r\n                            updateTasksRatio(thisCategoryId);               \r\n                            };\r\n            \r\n                            \r\n                            checkboxElement.checked = false;\r\n                            task.complete = false;\r\n                            saveToLocalStorage();\r\n                            showTasksCount();\r\n                            updateTasksRatio(thisCategoryId);  \r\n\r\n                            new ProgressBar(progressBar, category.taskRatio); \r\n                        });\r\n        \r\n                    };\r\n        \r\n                    //Functions\r\n                    updateRemainingTime(){\r\n                        task.remainingTime.pop();\r\n                        task.remainingTime.push(this.remainingSeconds);\r\n                        localStorage.setItem('categories', JSON.stringify(categories));\r\n                    };\r\n        \r\n                \r\n                    updateInterfaceControls(){\r\n                        if(this.interval === null){\r\n                            this.el.control.innerHTML =`<p>play</p>`;\r\n                            this.el.control.classList.add('timer__btn--start');\r\n                            this.el.control.classList.remove('timer__btn--stop');\r\n                        } else {\r\n                            this.el.control.innerHTML =`<p>pause</p>`;\r\n                            this.el.control.classList.add('timer__btn--stop');\r\n                            this.el.control.classList.remove('timer__btn--start');\r\n                    \r\n                        }\r\n                    };\r\n                \r\n                    updateInterfaceTime() {\r\n                        const minutes = Math.floor(this.remainingSeconds / 60);\r\n                        const seconds = this.remainingSeconds % 60;\r\n                    \r\n                        this.el.minutes.textContent = minutes.toString().padStart(2, '0');\r\n                        this.el.seconds.textContent = seconds.toString().padStart(2, '0');\r\n                    };\r\n                \r\n                    start(target){\r\n\r\n                        const thisCategoryId = target;\r\n\r\n                        if(this.remainingSeconds === 0 || this.remainingSeconds === []) return\r\n                \r\n                            this.interval = setInterval(() =>{\r\n                \r\n                                this.remainingSeconds--;\r\n                                this.updateInterfaceTime();\r\n                        \r\n                                if (this.remainingSeconds === 0) {\r\n                                this.stop();\r\n                                checkboxElement.checked = true;\r\n                                task.complete = true;\r\n                                showTasksCount();\r\n                                this.updateRemainingTime();\r\n                                updateTasksRatio(thisCategoryId);\r\n                                saveToLocalStorage();\r\n                                new ProgressBar(progressBar, category.taskRatio);\r\n                                }\r\n                        \r\n                            }, 1000);\r\n                        \r\n                            this.updateInterfaceControls();\r\n                            \r\n                        }\r\n                    \r\n                        stop(){\r\n                        clearInterval(this.interval);\r\n                        this.interval = null;\r\n                        this.updateInterfaceControls();\r\n                \r\n                    };\r\n                \r\n                    static getHTML(){\r\n                        return `\r\n                        <div class=\"notification-time-box glassmorphism-card\">\r\n                            <div class=\"set-time-box\">\r\n                                <div class=\"set-time-box__content\">\r\n                                    <h2 class=\"time-title\">Put Time</h2>\r\n                                    <button class=\"btn-close-box\">\r\n                                    <i class=\"fa-solid fa-circle-xmark\"></i>\r\n                                    </button>\r\n                                </div>\r\n                \r\n                                <div class=\"set-time-box__input-wrapper\">\r\n                                    <form class=\"time-form\">\r\n                                        <input\r\n                                            class=\"time-value\"\r\n                                            id=\"time-value\"\r\n                                            type=\"input\"\r\n                                            placeholder=\"e.g 20 etc\"\r\n                                        />\r\n                                        <input class=\"add-value-btn\" type=\"submit\" value=\"Add Time\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <span class=\"timer__part timer__part--minutes\">00</span>\r\n                        <span class=\"timer__part timer__part--semicolons\">:</span>\r\n                        <span class=\"timer__part timer__part--seconds\">00</span>\r\n                    \r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"timer__btn timer__btn--control timer__start\"\r\n                        >\r\n                        </button>\r\n                    \r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"timer__btn timer__btn--reset timer__setup\"\r\n                        >\r\n                            <p>setup</p>\r\n                        </button>`\r\n                    }\r\n                };\r\n                new Timer(countDown); \r\n\r\n                //SHOW UPDATE MESSAGE TASK COUNT\r\n                function showTasksCount(){\r\n\r\n                    const incompleteTaskCount = category.tasks.filter(task => !task.complete).length;\r\n                    const completeTaskCount = category.tasks.filter(task => task.complete).length;\r\n          \r\n                    if(incompleteTaskCount === 0){\r\n                      tasksCounter.innerText = 'You have done everything! Good Job!'\r\n                    } else {\r\n                      let taskRatio = Math.floor((100 * completeTaskCount) / category.tasks.length)\r\n                      const taskString = incompleteTaskCount === 1 ? \"task\" : \"tasks\"\r\n                      tasksCounter.innerText = `${incompleteTaskCount} ${taskString} remaining ${taskRatio}% done` \r\n                    }       \r\n                };\r\n\r\n                checkboxElement.addEventListener('click', e => {\r\n                    checkboxElement.checked;\r\n                    let thisCategoryId = checkboxElement.parentElement.parentElement.parentElement.parentElement.parentElement.id;\r\n                    const selectedCategory = categories.find(category => category.id === thisCategoryId);\r\n                    const selectedTask = selectedCategory.tasks.find(task => task.id === e.target.id);\r\n                    selectedTask.complete = e.target.checked\r\n                    saveToLocalStorage()\r\n                    showTasksCount()\r\n          \r\n                    updateTasksRatio(thisCategoryId);\r\n          \r\n                    new ProgressBar(progressBar, selectedCategory.taskRatio);  \r\n          \r\n                });\r\n\r\n            });\r\n        };\r\n        displayTask();\r\n\r\n    });\r\n};\r\n\r\n\r\n//LOCAL STORAGE - SAVE TO LOCAL STORAGE\r\nconst saveToLocalStorage = () => {\r\n    localStorage.setItem('categories', JSON.stringify(categories));\r\n    localStorage.setItem('category.selectedCategoryId', selectedCategoryId);\r\n};\r\n\r\n\r\n\r\n// ****** EVENT LISTENERS **********\r\nwindow.addEventListener('DOMContentLoaded', e => {\r\n\r\n    if(categories.length !== 0){\r\n        welcomePage.style.display = \"none\"\r\n        itemsListPage.style.transform = \"translateX(0)\";\r\n        itemsListPage.style.display = \"flex\";\r\n        displayCategory();\r\n    };  \r\n\r\n    getCurrentDate();\r\n    updateCategoryCounter();\r\n    \r\n});\r\n\r\nnameInput.value = username;\r\nnameInput.addEventListener('change', (e) => {\r\n    localStorage.setItem('username', e.target.value);\r\n});\r\n\r\n// SELECTED CATEGORY ID\r\n\r\nnextPageButton.addEventListener('click', leaveWelcomePage);\r\n\r\nform.addEventListener('submit', e =>{\r\n    e.preventDefault()\r\n  \r\n    if (categoryInput == null || categoryInput === '') return;\r\n  \r\n    const category = {\r\n  \r\n      categoryName: categoryInput.value.trim(),\r\n      id: new Date().getTime().toString(),\r\n      taskRatio: [],\r\n      tasks: [],\r\n    };\r\n\r\n    categories.push(category);\r\n    saveToLocalStorage();\r\n    e.target.reset();\r\n    \r\n    displayCategory();\r\n    updateCategoryCounter();\r\n\r\n});\r\n"]}